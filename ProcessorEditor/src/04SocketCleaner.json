{
    "nodes": [{
            "pattern": "*.jsp",
            "class": "FilePattern",
            "id": "jspExtFilter",
            "type": "Condition",
            "active": true
        }, {
            "pattern": "*.java",
            "class": "FilePattern",
            "id": "javaExtFilter",
            "type": "Condition",
            "active": true
        }, {
            "pattern": "\\s?mc\\s*=\\s*new\\s*MessageContext\\((\\s|.)*?\\);",
            "replace": "mc = new MessageContext(getMessageHandler(\"<cleaner#pname>\"));",
            "flags": 0,
            "class": "ReplaceText",
            "id": "cleanMC",
            "type": "Action",
            "active": true
        }, {
            "code": "var pHolder = new RegExp(\"<cleaner#pname>\");\nwhile ((match = pHolder.exec(target)) != null) {\n    var i = match.index;\n    var JavaParser = Java.type('processor.core.graph.jslinker.JavaParser');\n    var scope = JavaParser.getMethodScopeOf(target, i);\n    var codePiece = target.substring(scope[0], scope[1]);\n    var codePiece = codePiece.substring(codePiece.indexOf(\"{\"));\n    var pattern = \/([A-Z][A-Z0-9]{6})(.*Message)\/;\n    var found = codePiece.match(pattern);\n    if (found.length > 0) {\n        var pName = found[1];\n        target = target.replace(\"<cleaner#pname>\", pName);\n    }\n}\n\nreturn target;\n",
            "class": "ExecutableAction",
            "id": "progrExtractor",
            "type": "Action",
            "active": true
        }, {
            "code": "    function extractVarName(target) {\n        var pattern = \/\\sSocket\\s+([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*(=|;)\/;\n        var found = pattern.exec(target);\n        if (found) {\n            return [found[1], found.index];\n        }\n        return null;\n    }\n\n    var extractResult = extractVarName(target);\n\n    if (extractResult == null){\n\tprint(\"echate null\");\n        return target;\n\t}\n\n    var varName = extractResult[0];\n    var varIndex = extractResult[1];\n    \n    var JavaParser = Java.type('processor.core.graph.jslinker.JavaParser');\n    var scope = JavaParser.getMethodScopeOf(target, varIndex);\n\n    varIndex = scope[0];\n    var endScopeIndex = scope[1];\n    print(\"\\n\" + varIndex + \",\" + endScopeIndex);\t\n    var stringPreSpace = target.substring(0, varIndex);\n    var stringSpace = target.substring(varIndex, endScopeIndex);\n    var stringPostSpace = target.substring(endScopeIndex);\n    var regsLists = [\n        [new RegExp(\"Socket\\\\s+\" + varName + \"\\\\s*=\\\\s*null\\\\s*;\", 'g'), \"\"],\n        [new RegExp(varName + \"\\\\s*=\\\\s*new\\\\s*Socket\\\\(.*?;\", 'g'), \"\"],\n        [new RegExp(\"[^a-zA-Z0-9_]\" + varName + \"\\\\..*?;\", 'g'), \"\"]\n    ]\n\n    for (var i = 0; i < regsLists.length; i++) {\n        var pattern = regsLists[i][0];\n        var replace = regsLists[i][1];\n        stringSpace = stringSpace.replace(pattern, replace);\n    }\n\n    return target = stringPreSpace + stringSpace + stringPostSpace;\n",
            "class": "ExecutableAction",
            "id": "remSocketRef",
            "type": "Action",
            "active": true
        }, {
            "code": "var pattern = \/extends.*SuperServlet\/;\nreturn pattern.test(target);",
            "class": "ExecutableCondition",
            "id": "serveltExecCond",
            "type": "Condition",
            "active": true
        }],
    "lastWorkingDirectory": null,
    "name": null,
    "description": null,
    "graph": "strict digraph G {\r\n  START_NODE [ label=\"START_NODE\" ];\r\n  END_NODE [ label=\"END_NODE\" ];\r\n  FAIL_NODE [ label=\"FAIL_NODE\" ];\r\n  jspExtFilter [ label=\"jspExtFilter\" ];\r\n  javaExtFilter [ label=\"javaExtFilter\" ];\r\n  cleanMC [ label=\"cleanMC\" ];\r\n  progrExtractor [ label=\"progrExtractor\" ];\r\n  remSocketRef [ label=\"remSocketRef\" ];\r\n  serveltExecCond [ label=\"serveltExecCond\" ];\r\n  START_NODE -> jspExtFilter [ label=\"et2083039142\" ];\r\n  jspExtFilter -> FAIL_NODE [ label=\"et295079179\" ];\r\n  jspExtFilter -> javaExtFilter [ label=\"ef674897160\" ];\r\n  javaExtFilter -> serveltExecCond [ label=\"et128865513\" ];\r\n  javaExtFilter -> FAIL_NODE [ label=\"ef1785900076\" ];\r\n  serveltExecCond -> cleanMC [ label=\"et1336511164\" ];\r\n  serveltExecCond -> FAIL_NODE [ label=\"ef931335196\" ];\r\n  progrExtractor -> remSocketRef [ label=\"et1486543161\" ];\r\n  cleanMC -> progrExtractor [ label=\"et990712396\" ];\r\n  remSocketRef -> END_NODE [ label=\"et461339955\" ];\r\n}\r\n"
}