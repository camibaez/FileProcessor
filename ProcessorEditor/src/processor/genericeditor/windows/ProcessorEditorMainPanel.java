/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package processor.genericeditor.windows;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import processor.core.file.FileWalker;
import processor.core.file.Profile;
import processor.core.file.ProjectCentral;
import processor.core.graph.actions.Action;
import processor.editor.actions.LoadFilesAction;
import processor.profile.DIEmulator;

public final class ProcessorEditorMainPanel extends JPanel {

    Profile profile = DIEmulator.getProfile();
    DiffPanel diffPanel;
    Set<Action> actionsFilters;
    
    boolean onlyChanged;

    public ProcessorEditorMainPanel() {
        initComponents();
       
        diffPanel = new DiffPanel(profile);
        diffContainerPanel.add(diffPanel, BorderLayout.CENTER);
        //startFillingThread();
    }

    private void startFillingThread() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        if (profile.getFileWalker().isDone()) {
                            fillFilesTable();
                            break;
                        } else {
                            Thread.sleep(1000);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }
        });
    }

    public void fillFilesTable() {
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        tableModel.setRowCount(0);

        profile.getFileCentral().getResultMap().forEach((k, v) -> {
            if (!onlyChanged || (onlyChanged && v.getActions().size() > 0)) {
                tableModel.addRow(new Object[]{v.isActive(), k, v.getActions()});
            }
        });

        
        jLabel1.setText(tableModel.getRowCount() + " files of " + profile.getFileCentral().getResultMap().size());

    }

    public void fillFilters(){
        actionsFilters = new LinkedHashSet<>();
        profile.getNodes().stream().filter(n -> n instanceof Action).forEach(a -> {
            JCheckBox jCheckBox = new javax.swing.JCheckBox();
            jCheckBox.setText(a.getId());
            jCheckBox.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(jCheckBox.isSelected())
                        actionsFilters.add((Action) a);
                    else
                        actionsFilters.remove(a);
                    fillFilesTable();
                }
            });
            
            jPanel2.add(jCheckBox);
            actionsFilters.add((Action) a);
        });
    }
    
    private void refreshProcessorView() {
        int row = jTable1.getSelectedRow();
        if (row > -1) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Path path = Paths.get((String) model.getValueAt(row, 1));
            if (profile.getFileProcessor() == null) {
                System.out.println("You must init the FileProcessor first.");
                return;
            }
            diffPanel.loadDiffComponent(path);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        diffContainerPanel = new javax.swing.JPanel();
        matchedFilesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        diffContainerPanel.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setTopComponent(diffContainerPanel);

        matchedFilesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Files Result"));
        matchedFilesPanel.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new FilesTableModel()
        );
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        matchedFilesPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Files processed:"); // NOI18N
        matchedFilesPanel.add(jLabel1, java.awt.BorderLayout.SOUTH);
        matchedFilesPanel.add(jPanel2, java.awt.BorderLayout.LINE_END);

        jSplitPane1.setBottomComponent(matchedFilesPanel);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(filler1);

        jToggleButton1.setText("Show Only Changed");
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        jButton1.setText("Process Files");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setText("Reload Table"); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jButton2.getAccessibleContext().setAccessibleDescription("Refresh");

        jPanel1.add(jToolBar1, java.awt.BorderLayout.SOUTH);

        jButton3.setText("Select Folder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(2, 2, 2))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        refreshProcessorView();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        if (row > -1) {
            if (evt.getKeyCode() == KeyEvent.VK_R) {
                Path p = Paths.get((String) model.getValueAt(row, 1));
                try {
                    String result = (String) profile.getFileProcessor().processFile(p.toFile()).getResult();
                    profile.getFileProcessor().saveFile(result, p);
                    model.removeRow(row);
                    if (model.getRowCount() == 0) {
                        return;
                    }
                    if (row <= model.getRowCount() - 1) {
                        jTable1.getSelectionModel().setSelectionInterval(0, row);

                    } else {
                        jTable1.getSelectionModel().setSelectionInterval(0, model.getRowCount() - 1);
                    }
                    refreshProcessorView();
                } catch (IOException ex) {
                    Logger.getLogger(ProcessorEditorMainPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        fillFilesTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        try {
            int returnCode = profile.getGraph().compile();
            if(returnCode != 0){
                throw new Exception("Error compiling graph.");
            }
            FileWalker fileMatcher = new FileWalker(profile);
            profile.setFileWalker(fileMatcher);
            Files.walkFileTree(Paths.get(profile.getWorkingDirectory()), fileMatcher);
            profile.getFileWalker().setDone(true);
            System.out.println("Matching done!!!");
            fillFilesTable();
        }catch (Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An errror ocurred processing files. Eror message: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        this.onlyChanged = jToggleButton1.isSelected();
        fillFilesTable();
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new LoadFilesAction().actionPerformed(evt);
        jTextField1.setText(profile.getWorkingDirectory());
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel diffContainerPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel matchedFilesPanel;
    // End of variables declaration//GEN-END:variables

}
